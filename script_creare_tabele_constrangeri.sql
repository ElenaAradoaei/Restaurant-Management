-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2022-12-23 13:28:35 EET
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE angajat (
    id_angajat           NUMBER(2)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    nume_angajat         VARCHAR2(15) NOT NULL,
    prenume_angajat      VARCHAR2(15) NOT NULL,
    cnp_angajat          NUMBER(13) NOT NULL,
    telefon_angajat      VARCHAR2(10) NOT NULL,
    functie              VARCHAR2(15) NOT NULL,
    id_restaurant        NUMBER(2) NOT NULL,
    data_nastere_angajat DATE NOT NULL,
    adresa_angajat       VARCHAR2(40)
)
LOGGING;

ALTER TABLE angajat
    ADD CONSTRAINT nume_angajat_ck CHECK ( REGEXP_LIKE ( nume_angajat,
                                                         '^[A-Za-z''-]+$' )
                                           AND length(nume_angajat) > 1 );

ALTER TABLE angajat
    ADD CONSTRAINT prenume_angajat_ck CHECK ( REGEXP_LIKE ( prenume_angajat,
                                                            '^[A-Za-z''-]+$' )
                                              AND length(prenume_angajat) > 1 );

ALTER TABLE angajat
    ADD CONSTRAINT cnp_angajat_ck CHECK ( length(cnp_angajat) = 13 );

ALTER TABLE angajat
    ADD CONSTRAINT telefon_angajat_ck CHECK ( REGEXP_LIKE ( telefon_angajat,
                                                            '^([0-9]){10}$' ) );

ALTER TABLE angajat
    ADD CONSTRAINT angajat_functie_ck CHECK ( ( REGEXP_LIKE ( functie,
                                                              '^[A-Za-z''-]+$' ) )
                                              AND ( length(functie) > 1 ) );

ALTER TABLE angajat ADD CONSTRAINT angajat_pk PRIMARY KEY ( id_angajat );

ALTER TABLE angajat ADD CONSTRAINT angajat_cnp_angajat_un UNIQUE ( cnp_angajat );

CREATE TABLE angajati_per_eveniment (
    id_angajat   NUMBER(2) NOT NULL,
    id_eveniment NUMBER(2) NOT NULL
)
LOGGING;

ALTER TABLE angajati_per_eveniment ADD CONSTRAINT angajati_per_eveniment_pk PRIMARY KEY ( id_angajat,
                                                                                          id_eveniment );

CREATE TABLE client (
    id_client           NUMBER(2)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    nume_client         VARCHAR2(15) NOT NULL,
    prenume_client      VARCHAR2(15) NOT NULL,
    cnp_client          NUMBER(13) NOT NULL,
    telefon_client      VARCHAR2(10) NOT NULL,
    data_nastere_client DATE
)
LOGGING;

ALTER TABLE client
    ADD CONSTRAINT nume_client_ck CHECK ( REGEXP_LIKE ( nume_client,
                                                        '^[A-Za-z''-]+$' )
                                          AND length(nume_client) > 1 );

ALTER TABLE client
    ADD CONSTRAINT prenume_client_ck CHECK ( REGEXP_LIKE ( prenume_client,
                                                           '^[A-Za-z''-]+$' )
                                             AND length(prenume_client) > 1 );

ALTER TABLE client
    ADD CONSTRAINT cnp_client_ck CHECK ( length(cnp_client) = 13 );

ALTER TABLE client
    ADD CONSTRAINT telefon_client_ck CHECK ( REGEXP_LIKE ( telefon_client,
                                                           '^([0-9]){10}$' ) );

ALTER TABLE client ADD CONSTRAINT client_pk PRIMARY KEY ( id_client );

ALTER TABLE client ADD CONSTRAINT client_cnp_client_un UNIQUE ( cnp_client );

CREATE TABLE eveniment (
    id_eveniment   NUMBER(2)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    data_eveniment DATE NOT NULL,
    nr_persoane    NUMBER(3) NOT NULL,
    nume_eveniment VARCHAR2(30) NOT NULL,
    pret_eveniment NUMBER(6) NOT NULL,
    id_client      NUMBER(2) NOT NULL,
    id_sala        NUMBER(2) NOT NULL
)
LOGGING;

ALTER TABLE eveniment ADD CONSTRAINT nr_persoane_ck CHECK ( nr_persoane > 10 );

ALTER TABLE eveniment
    ADD CONSTRAINT nume_eveniment_ck CHECK ( REGEXP_LIKE ( nume_eveniment,
                                                           '^[A-Za-z''-]+$' )
                                             AND length(nume_eveniment) > 1 );

ALTER TABLE eveniment ADD CONSTRAINT pret_eveniment_ck CHECK ( pret_eveniment > 0 );

CREATE UNIQUE INDEX eveniment__idx ON
    eveniment (
        id_client
    ASC )
        LOGGING;

ALTER TABLE eveniment ADD CONSTRAINT eveniment_pk PRIMARY KEY ( id_eveniment );

ALTER TABLE eveniment ADD CONSTRAINT eveniment_data_sala_uk UNIQUE ( id_sala,
                                                                     data_eveniment );

CREATE TABLE restaurant (
    id_restaurant      NUMBER(2)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    nume_restaurant    VARCHAR2(20) NOT NULL,
    adresa_restaurant  VARCHAR2(40) NOT NULL,
    telefon_restaurant VARCHAR2(10) NOT NULL,
    nr_sali            NUMBER(2) NOT NULL
)
LOGGING;

ALTER TABLE restaurant
    ADD CONSTRAINT nume_restaurant_ck CHECK ( length(nume_restaurant) > 1 );

ALTER TABLE restaurant
    ADD CONSTRAINT telefon_restaurant_ck CHECK ( REGEXP_LIKE ( telefon_restaurant,
                                                               '^([0-9]){10}$' ) );

ALTER TABLE restaurant ADD CONSTRAINT restaurant_nr_sali_ck CHECK ( nr_sali > 0 );

ALTER TABLE restaurant ADD CONSTRAINT restaurant_pk PRIMARY KEY ( id_restaurant );

ALTER TABLE restaurant ADD CONSTRAINT restaurant_adresa_telefon_uk UNIQUE ( adresa_restaurant );

CREATE TABLE sala (
    id_sala       NUMBER(2)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    nr_locuri     NUMBER(3) NOT NULL,
    pret_sala     NUMBER(5) NOT NULL,
    id_restaurant NUMBER(2) NOT NULL
)
LOGGING;

ALTER TABLE sala ADD CONSTRAINT nr_locuri_ck CHECK ( nr_locuri > 10 );

ALTER TABLE sala ADD CONSTRAINT pret_sala_ck CHECK ( pret_sala > 0 );

ALTER TABLE sala ADD CONSTRAINT sala_pk PRIMARY KEY ( id_sala );

ALTER TABLE angajati_per_eveniment
    ADD CONSTRAINT angajat_angev_fk FOREIGN KEY ( id_angajat )
        REFERENCES angajat ( id_angajat )
    NOT DEFERRABLE;

ALTER TABLE eveniment
    ADD CONSTRAINT client_eveniment FOREIGN KEY ( id_client )
        REFERENCES client ( id_client )
    NOT DEFERRABLE;

ALTER TABLE angajati_per_eveniment
    ADD CONSTRAINT eveniment_angev_fk FOREIGN KEY ( id_eveniment )
        REFERENCES eveniment ( id_eveniment )
    NOT DEFERRABLE;

ALTER TABLE angajat
    ADD CONSTRAINT restaurant_angajat_fk FOREIGN KEY ( id_restaurant )
        REFERENCES restaurant ( id_restaurant )
    NOT DEFERRABLE;

ALTER TABLE sala
    ADD CONSTRAINT restaurant_sala_fk FOREIGN KEY ( id_restaurant )
        REFERENCES restaurant ( id_restaurant )
    NOT DEFERRABLE;

ALTER TABLE eveniment
    ADD CONSTRAINT sala_eveniment_fk FOREIGN KEY ( id_sala )
        REFERENCES sala ( id_sala )
    NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER trg_Angajat_BRIU 
    BEFORE INSERT OR UPDATE ON ANGAJAT 
    FOR EACH ROW 
BEGIN
	IF( :new.Data_nastere_angajat >= TO_DATE('2004-12-01', 'yyyy-mm-dd' ))
	THEN
		RAISE_APPLICATION_ERROR( -20001, 'Data invalida: ' || TO_CHAR( :new.Data_nastere_angajat, 'DD.MM.YYYY HH24:MI:SS' ) || ' trebuie sa fie mai mica decat 2004-12-01 pentru ca angajatul sa aiba peste 18 ani.' );
	END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_Client_BRIU 
    BEFORE INSERT OR UPDATE ON CLIENT 
    FOR EACH ROW 
BEGIN
	IF( :new.Data_nastere_client >= TO_DATE('2004-12-01', 'yyyy-mm-dd' ))
	THEN
		RAISE_APPLICATION_ERROR( -20001, 'Data invalida: ' || TO_CHAR( :new.Data_nastere_client, 'DD.MM.YYYY HH24:MI:SS' ) || ' trebuie sa fie mai mica decat 2004-12-01 pentru a fi clientul major.' );
	END IF;
END; 
/

CREATE OR REPLACE TRIGGER Trg3 
    BEFORE INSERT OR UPDATE ON EVENIMENT 
    FOR EACH ROW 
BEGIN
	IF( :new.Data_eveniment <= SYSDATE )
	THEN
		RAISE_APPLICATION_ERROR( -20001, 'Data invalida: ' || TO_CHAR( :new.Data_eveniment, 'DD.MM.YYYY HH24:MI:SS' ) || ' trebuie sa fie mai mare decat data curenta.' );
	END IF;
END; 
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             6
-- CREATE INDEX                             1
-- ALTER TABLE                             33
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           3
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
